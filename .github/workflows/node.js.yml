name: Node.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    name: Unit Test & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 19.x, 20.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Tests
        run: yarn test
      - name: Build
        run: yarn build
      - name: Archive production binary
        uses: actions/upload-artifact@v3
        if: matrix.node-version == '20.x'
        with:
          name: binary
          path: bin
  e2e:
    needs: build
    name: E2E Testing - Node.js 20.x
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: 'yarn'
      - uses: actions/download-artifact@v3
        with:
          name: binary
          path: 'bin'
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Map Mocked Schemas to Camel Case
        run: |
          node bin/commands.js map --camel --schema src/__tests__/mock.prisma -o e2e-generated.prisma
          node bin/commands.js map --camel --schema src/__tests__/mock-multi-schema.prisma -o e2e-multi-generated.prisma
      - name: Verify Mapped Schemas
        run: |
          cmp -s e2e-generated.prisma src/__tests__/expected.prisma
          cmp -s e2e-multi-generated src/__tests__/expected-multi-schema.prisma
